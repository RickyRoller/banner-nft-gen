{"version":3,"sources":["components/banner-svg/banner-svg.module.scss","components/template-selector/template-selector.module.scss","components/mint-modal/mint-modal.module.scss","models/templates.ts","components/tile/tile.tsx","banner-templates/templateVars.ts","models/controls.ts","utils/spline.ts","template-components/line-pattern.tsx","banner-templates/index.ts","banner-templates/PFP-Left.ts","state/app/selectors.ts","utils/helpers.ts","components/banner-svg/banner-svg.tsx","components/control/control.tsx","components/control/range-control/range-control.tsx","state/app/actions.ts","components/controls/controls.tsx","components/template-selector/template-selector.tsx","hooks/useModal.tsx","components/modal/modal.tsx","hooks/modalContext.tsx","components/mint-modal/mint-modal.tsx","components/banner-gen/banner-gen.tsx","components/services/wallet.ts","components/header/header.tsx","App.tsx","state/app/index.ts","state/store.ts","index.tsx","components/banner-gen/banner-gen.module.scss","components/modal/modal.module.scss","components/controls/controls.module.scss","components/tile/tile.module.scss","components/control/control.module.scss","App.module.scss","components/header/header.module.scss"],"names":["module","exports","TemplateObjectTypes","CutoutType","Tile","children","className","cx","styles","bannerWidth","bannerHeight","ControlTypes","formatPoints","points","close","Array","isArray","map","x","y","lastPoint","length","secondToLastPoint","firstPoint","secondPoint","unshift","push","flat","id","renderLinePattern","patternId","width","height","padding","angle","spread","strokeWidth","linePoints","noise","colWidth","rowHeight","Math","ceil","paths","fill","undefined","randomNoise","randomUniform","baseSpline","tension","cb","size","last","startPointX","startPointY","path","maxIteration","inc","i","x0","y0","x1","y1","x2","y2","cp1x","cp1y","cp2x","cp2y","spline","a","d","stroke","transform","TemplatesMap","PFPLeft","key","objects","type","LINE_PATTERN","title","controls","NumberSlider","objectId","property","min","max","default","NFT","cutout","CIRCLE","NFTHeight","selectTemplateId","state","app","templateId","selectTemplate","createSelector","selectControlsState","controlsState","objectControlId","prop","BannerSVG","svgRef","useRef","template","useSelector","SVG","viewBox","ref","obj","o","controlId","cy","r","templateToSvg","Control","label","input","RangeControl","control","onChange","defaultValue","setTemplateId","createAction","deployControls","updateControlValue","Controls","t","dispatch","useDispatch","renderObjectControls","value","containers","filter","controlGroup","templatesList","Object","values","name","TemplateSelector","onSelect","useState","templates","selected","setSelected","templateList","templatePreview","onClick","footer","primary","disabled","modalDataDefaults","open","onClose","Modal","useContext","modalContext","modalContent","handleModal","modal","ReactDOM","createPortal","ModalOverlay","header","CloseOutlined","body","document","querySelector","createContext","Provider","ModalProvider","setModal","setModalContent","content","data","useModal","MintModal","onCancel","setName","url","setUrl","description","setDescription","creating","setCreating","mintDisabled","useEffect","svg","blob","Blob","outerHTML","blobURL","URL","createObjectURL","image","Image","onload","canvas","createElement","context","getContext","drawImage","jpg","toDataURL","console","log","src","fn","target","LoadingOutlined","preview","form","container","placeholder","cancel","mint","BannerGen","onTemplateSelect","closeModal","left","tileStyles","subTitle","bannerGenerator","noTemplate","connectWallet","window","ethereum","request","method","addressArray","status","address","message","Header","connect","App","appReducer","createReducer","addCase","payload","reduce","acc","cur","ac","cr","store","configureStore","reducer","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5770c230.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondaryBoxShadow\":\"banner-svg_secondaryBoxShadow__LCHhp\",\"SVG\":\"banner-svg_SVG__2FKLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"template-selector_button__yhn1E\",\"primaryButton\":\"template-selector_primaryButton__1Xtq3\",\"TemplateSelector\":\"template-selector_TemplateSelector__3b7ik\",\"footer\":\"template-selector_footer__1qtlM\",\"primary\":\"template-selector_primary__3Ocea\",\"secondaryButton\":\"template-selector_secondaryButton__3kKhN\",\"templateList\":\"template-selector_templateList__36tTS\",\"templatePreview\":\"template-selector_templatePreview__JjIeV\",\"selected\":\"template-selector_selected__10pWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"mint-modal_button__1QN7z\",\"primaryButton\":\"mint-modal_primaryButton__7T8xY\",\"MintModal\":\"mint-modal_MintModal__1efXV\",\"footer\":\"mint-modal_footer__JmMxX\",\"mint\":\"mint-modal_mint__2OY48\",\"secondaryButton\":\"mint-modal_secondaryButton__26tAQ\",\"cancel\":\"mint-modal_cancel__2K7Sr\",\"input\":\"mint-modal_input__3hgCf\",\"creating\":\"mint-modal_creating__7kdrR\",\"preview\":\"mint-modal_preview__1mLiB\",\"form\":\"mint-modal_form__3WKE1\",\"container\":\"mint-modal_container__2qDPZ\",\"label\":\"mint-modal_label__OzKGQ\"};","import { TemplateKeys } from 'banner-templates';\nimport { TemplateControls } from './controls';\n\nexport enum TemplateObjectTypes {\n  NFT,\n  LINE_PATTERN,\n}\n\nexport enum CutoutType {\n  CIRCLE,\n}\n\nexport interface Template {\n  key: TemplateKeys;\n  objects: TemplateObjects[];\n}\n\nexport interface BaseTemplateObject {\n  type: TemplateObjectTypes;\n  id: string;\n  title: string;\n  controls: TemplateControls;\n}\n\nexport interface TemplateObjectNFT extends BaseTemplateObject {\n  cutout: CutoutType;\n  height: number;\n  width: number;\n  x: number;\n  y: number;\n}\n\nexport type TemplateObjects = BaseTemplateObject | TemplateObjectNFT;\n","import { FC } from 'react';\nimport styles from './tile.module.scss';\nimport cx from 'classnames';\n\ninterface Props {\n  className?: string;\n}\n\nexport const Tile: FC<Props> = ({ children, className }) => {\n  return <div className={cx(styles.Tile, className)}>{children}</div>;\n};\n","export const bannerWidth = 1500;\nexport const bannerHeight = 500;\nexport const bannerPadding = 24;\n","interface ControlBase {\n  type: ControlTypes.NumberSlider;\n  title: string;\n  label?: string;\n  objectId: string;\n  property: string;\n  default: any;\n}\n\nexport enum ControlTypes {\n  NumberSlider,\n}\n\nexport interface NumberSlider extends ControlBase {\n  min: number;\n  max: number;\n}\n\nexport type TemplateControls = NumberSlider[];\n","// https://github.com/georgedoescode/generative-utils/blob/master/src/spline.js\n\nfunction formatPoints(points: any, close: boolean) {\n  points = [...points];\n\n  if (!Array.isArray(points[0])) {\n    points = points.map(({ x, y }: { x: number; y: number }) => [x, y]);\n  }\n\n  if (close) {\n    const lastPoint = points[points.length - 1];\n    const secondToLastPoint = points[points.length - 2];\n\n    const firstPoint = points[0];\n    const secondPoint = points[1];\n\n    points.unshift(lastPoint);\n    points.unshift(secondToLastPoint);\n\n    points.push(firstPoint);\n    points.push(secondPoint);\n  }\n\n  return points.flat();\n}\n\nfunction spline(\n  points: any[] = [],\n  tension = 1,\n  close = false,\n  cb?: (msg: string, d: any) => void,\n) {\n  points = formatPoints(points, close);\n\n  const size = points.length;\n  const last = size - 4;\n\n  const startPointX = close ? points[2] : points[0];\n  const startPointY = close ? points[3] : points[1];\n\n  let path = 'M' + [startPointX, startPointY];\n\n  cb && cb('MOVE', [startPointX, startPointY]);\n\n  const startIteration = close ? 2 : 0;\n  const maxIteration = close ? size - 4 : size - 2;\n  const inc = 2;\n\n  for (let i = startIteration; i < maxIteration; i += inc) {\n    const x0 = i ? points[i - 2] : points[0];\n    const y0 = i ? points[i - 1] : points[1];\n\n    const x1 = points[i + 0];\n    const y1 = points[i + 1];\n\n    const x2 = points[i + 2];\n    const y2 = points[i + 3];\n\n    const x3 = i !== last ? points[i + 4] : x2;\n    const y3 = i !== last ? points[i + 5] : y2;\n\n    const cp1x = x1 + ((x2 - x0) / 6) * tension;\n    const cp1y = y1 + ((y2 - y0) / 6) * tension;\n\n    const cp2x = x2 - ((x3 - x1) / 6) * tension;\n    const cp2y = y2 - ((y3 - y1) / 6) * tension;\n\n    path += 'C' + [cp1x, cp1y, cp2x, cp2y, x2, y2];\n\n    cb && cb('CURVE', [cp1x, cp1y, cp2x, cp2y, x2, y2]);\n  }\n\n  return path;\n}\n\nexport { spline };\n","import { ControlTypes, TemplateControls } from 'models/controls';\nimport {\n  BaseTemplateObject,\n  // TemplateObjectLinePattern,\n  TemplateObjectTypes,\n} from 'models/templates';\nimport { spline } from '../utils/spline';\nimport { randomUniform } from 'd3-random';\n\nexport const initLinePattern = (id: string): BaseTemplateObject => ({\n  type: TemplateObjectTypes.LINE_PATTERN,\n  id,\n  title: 'Line Pattern Controls',\n  controls: [\n    // {\n    //   type: ControlTypes.NumberSlider,\n    //   parent: 'Pattern1',\n    //   property: 'angle',\n    //   min: 0,\n    //   max: 359,\n    // },\n    {\n      type: ControlTypes.NumberSlider,\n      title: 'Pattern spread',\n      objectId: id,\n      property: 'spread',\n      min: 4,\n      max: 24,\n      default: 12,\n    },\n    {\n      type: ControlTypes.NumberSlider,\n      title: 'Line width',\n      objectId: id,\n      property: 'strokeWidth',\n      min: 1,\n      max: 12,\n      default: 4,\n    },\n    {\n      type: ControlTypes.NumberSlider,\n      title: 'Line points',\n      objectId: id,\n      property: 'linePoints',\n      min: 4,\n      max: 60,\n      default: 45,\n    },\n    {\n      type: ControlTypes.NumberSlider,\n      title: 'Line variance',\n      objectId: id,\n      property: 'noise',\n      min: 0,\n      max: 10,\n      default: 7,\n    },\n  ],\n});\n\nexport interface LinePatternControlState {\n  angle: number;\n  spread: number;\n  strokeWidth: number;\n  linePoints: number;\n  noise: number;\n}\n\nexport const renderLinePattern =\n  ({\n    patternId,\n    width,\n    height,\n    padding,\n  }: {\n    patternId: string;\n    width: number;\n    height: number;\n    padding: number;\n  }) =>\n  ({\n    angle,\n    spread,\n    strokeWidth,\n    linePoints,\n    noise,\n  }: LinePatternControlState) => {\n    // const rotations = Math.floor(angle / 90);\n    // let scalePercent = angle / 90;\n    // scalePercent = scalePercent > 1 ? scalePercent - rotations : scalePercent;\n    // console.log(rotations, scalePercent);\n    const colWidth = spread + strokeWidth;\n    const rowHeight = Math.ceil(height / (linePoints - 1));\n    const paths = [];\n\n    const points = new Array(linePoints).fill(undefined);\n    const randomNoise = randomUniform(-noise, noise);\n    const splinePoints = points.map((a, i) => {\n      const randX = randomNoise();\n      return { x: randX, y: i * rowHeight };\n    });\n    const baseSpline = spline(splinePoints, 1, false);\n\n    for (let x = -padding; x <= width + padding; x += colWidth) {\n      paths.push(\n        <path\n          key={x}\n          d={baseSpline}\n          stroke=\"steelblue\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          transform={`translate(${x}, 0)`}\n        />,\n      );\n    }\n\n    return (\n      <g\n        key={patternId}\n        transform-origin={`${width / 2} ${height / 2}`}\n        // transform={`rotate(${angle}) scale(${1 + 5 * scalePercent})`}\n      >\n        {paths}\n      </g>\n    );\n  };\n","import { Template } from 'models/templates';\nimport { PFPLeft } from './PFP-Left';\n\ninterface TempMap {\n  PFPLeft: typeof PFPLeft;\n}\n\nexport const TemplatesMap: TempMap = {\n  PFPLeft,\n};\n\nexport type TemplateKeys = keyof typeof TemplatesMap;\n","import { ControlTypes } from 'models/controls';\nimport {\n  CutoutType,\n  Template,\n  // TemplateObjectLinePattern,\n  TemplateObjectNFT,\n  TemplateObjectTypes,\n} from 'models/templates';\nimport { initLinePattern } from 'template-components/line-pattern';\nimport { bannerHeight, bannerPadding } from './templateVars';\n\nconst NFTHeight = bannerHeight - bannerPadding * 2;\n\nconst linePattern1 = initLinePattern('Pattern1');\n\nexport const PFPLeft: Template = {\n  key: 'PFPLeft',\n  objects: [\n    linePattern1,\n    {\n      type: TemplateObjectTypes.NFT,\n      id: 'NFT',\n      title: 'PFP NFT',\n      cutout: CutoutType.CIRCLE,\n      height: NFTHeight,\n      width: NFTHeight,\n      x: NFTHeight / 2 + bannerPadding,\n      y: bannerHeight / 2,\n      controls: [],\n    },\n  ],\n};\n","import { TemplateKeys } from 'banner-templates';\nimport { createSelector } from 'reselect';\nimport { RootState } from 'state/store';\nimport { TemplatesMap } from 'banner-templates';\n\nexport const selectTemplateId = (state: RootState) => state.app.templateId;\nexport const selectTemplate = createSelector(\n  selectTemplateId,\n  (id: TemplateKeys | null) => (id !== null ? TemplatesMap[id] : undefined),\n);\n\nexport const selectControls = (state: RootState) => state.app.controls;\nexport const selectControlsState = (state: RootState) =>\n  state.app.controlsState;\n","export const objectControlId = (id: string) => (prop: string) =>\n  `${id}/${prop}`;\n","import {\n  bannerHeight,\n  bannerPadding,\n  bannerWidth,\n} from 'banner-templates/templateVars';\nimport {\n  Template,\n  // TemplateObjectLinePattern,\n  TemplateObjectNFT,\n  TemplateObjectTypes,\n} from 'models/templates';\nimport { FC, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectControlsState, selectTemplate } from 'state/app/selectors';\nimport { renderLinePattern } from 'template-components/line-pattern';\nimport { objectControlId } from 'utils/helpers';\nimport styles from './banner-svg.module.scss';\n\ninterface Props {}\n\nexport const BannerSVG: FC<Props> = () => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n  const template = useSelector(selectTemplate);\n  const controlsState = useSelector(selectControlsState);\n\n  const templateToSvg = (template: Template) => {\n    return template.objects.map((obj, i) => {\n      const controlId = objectControlId(obj.id);\n      let o;\n      switch (obj.type) {\n        case TemplateObjectTypes.NFT:\n          o = obj as TemplateObjectNFT;\n          return <circle key={i} cx={o.x} cy={o.y} r={o.width / 2} />;\n        case TemplateObjectTypes.LINE_PATTERN:\n          return renderLinePattern({\n            patternId: obj.id,\n            width: bannerWidth,\n            height: bannerHeight,\n            padding: bannerPadding,\n          })({\n            angle: controlsState[controlId('angle')],\n            spread: controlsState[controlId('spread')],\n            strokeWidth: controlsState[controlId('strokeWidth')],\n            linePoints: controlsState[controlId('linePoints')],\n            noise: controlsState[controlId('noise')],\n          });\n      }\n    });\n  };\n\n  return (\n    <svg\n      className={styles.SVG}\n      viewBox={`0 0 ${bannerWidth} ${bannerHeight}`}\n      ref={svgRef}\n    >\n      {template !== undefined ? templateToSvg(template) : null}\n    </svg>\n  );\n};\n","import { FC } from 'react';\nimport styles from './control.module.scss';\n\ninterface Props {\n  title: string;\n}\n\nexport const Control: FC<Props> = ({ children, title }) => {\n  return (\n    <div className={styles.Control}>\n      <div className={styles.label}>{title}</div>\n\n      <div className={styles.input}>{children}</div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport styles from './range-control.module.scss';\nimport Slider from 'antd/lib/slider';\nimport { NumberSlider } from 'models/controls';\n\ninterface Props {\n  control: NumberSlider;\n  onChange: (val: number) => void;\n}\n\nexport const RangeControl: FC<Props> = ({ control, onChange }) => {\n  return (\n    <div className={styles.RangeControl}>\n      <Slider\n        onChange={onChange}\n        defaultValue={control.default}\n        min={control.min}\n        max={control.max}\n      />\n    </div>\n  );\n};\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { TemplateKeys } from 'banner-templates';\nimport { TemplateObjects } from 'models/templates';\n\nexport const setTemplateId = createAction<TemplateKeys>('app/setTemplateId');\n\nexport const deployControls =\n  createAction<TemplateObjects[]>('app/deployControls');\n\nexport const updateControlValue = createAction<{\n  property: string;\n  value: any;\n}>('app/updateControlValue');\n\n// export const incrementAsyncThunk = createAsyncThunk(\n//   'INCREMENT_THUNK',\n//   async (amount: number, thunkAPI) =>\n//     await new Promise<number>((resolve, reject) => {\n//       setTimeout(() => {\n//         resolve(amount);\n//       }, 1000);\n//     }),\n// );\n","import { Control } from 'components/control';\nimport { RangeControl } from 'components/control/range-control';\nimport { ControlTypes, TemplateControls } from 'models/controls';\nimport { Template } from 'models/templates';\nimport { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateControlValue } from 'state/app/actions';\nimport { selectTemplate } from 'state/app/selectors';\nimport { objectControlId } from 'utils/helpers';\nimport styles from './controls.module.scss';\n\ninterface Props {}\n\nexport const Controls: FC<Props> = ({}) => {\n  const dispatch = useDispatch();\n  const template = useSelector(selectTemplate);\n\n  const updateValue = (property: string) => (value: any) => {\n    dispatch(updateControlValue({ property, value }));\n  };\n\n  const renderControlGroups = (t: Template) =>\n    t.objects\n      .filter((obj) => obj.controls.length > 0)\n      .map((obj) => (\n        <div key={obj.id} className={styles.controlGroup}>\n          <div className={styles.title}>{obj.title}</div>\n          {renderObjectControls(obj.controls)}\n        </div>\n      ));\n\n  const renderObjectControls = (controls: TemplateControls) =>\n    controls.map((control) => {\n      const controlId = objectControlId(control.objectId)(control.property);\n      switch (control.type) {\n        case ControlTypes.NumberSlider:\n          return (\n            <Control key={controlId} title={control.title}>\n              <RangeControl\n                control={control}\n                onChange={updateValue(controlId)}\n              />\n            </Control>\n          );\n      }\n    });\n\n  return (\n    <div className={styles.Controls}>\n      {template !== undefined ? (\n        <>\n          <div className={styles.title}>Control the look of your banner</div>\n\n          <div className={styles.containers}>\n            {renderControlGroups(template)}\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n};\n","import { TemplateKeys, TemplatesMap } from 'banner-templates';\nimport { Template } from 'models/templates';\nimport { FC, useEffect, useState } from 'react';\nimport styles from './template-selector.module.scss';\nimport cx from 'classnames';\n\ninterface TemplateListItem {\n  key: TemplateKeys;\n  name: string;\n}\n\nconst templatesToList = (templates: Template[]): TemplateListItem[] =>\n  templates.map((t) => ({\n    name: t.key,\n    key: t.key,\n  }));\n\nconst templatesList = templatesToList(Object.values(TemplatesMap));\n\ninterface Props {\n  onSelect: (t: TemplateKeys) => void;\n}\n\nexport const TemplateSelector: FC<Props> = ({ onSelect }) => {\n  const [templates] = useState<TemplateListItem[]>(templatesList);\n  const [selected, setSelected] = useState<TemplateListItem | undefined>();\n\n  const confirm = () => {\n    if (selected !== undefined) {\n      onSelect(selected.key);\n    }\n  };\n\n  return (\n    <div className={styles.TemplateSelector}>\n      <div className={styles.templateList}>\n        {templates.map((t: TemplateListItem) => (\n          <div\n            className={cx(styles.templatePreview, {\n              [styles.selected]: t.key === selected?.key,\n            })}\n            key={t.key}\n            onClick={() => setSelected(t)}\n          >\n            {t.key}\n          </div>\n        ))}\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n        <div className={styles.templatePreview}>Testing</div>\n      </div>\n\n      <div className={styles.footer}>\n        <button\n          className={styles.primary}\n          disabled={selected === undefined}\n          onClick={confirm}\n        >\n          Select\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport interface ModalData {\n  open: boolean;\n  title: string;\n  onClose: () => void;\n}\n\nexport const modalDataDefaults = {\n  open: false,\n  title: 'Modal',\n  onClose: () => {},\n};\n\nexport const useModal = () => {\n  let [modal, setModal] = useState<ModalData>(modalDataDefaults);\n  let [modalContent, setModalContent] = useState<JSX.Element | null>(null);\n\n  let handleModal = (\n    content: JSX.Element | null = null,\n    data: Partial<ModalData>,\n  ) => {\n    setModal({\n      ...modal,\n      ...data,\n    });\n    if (content !== null) {\n      setModalContent(content);\n    }\n  };\n\n  return { modal, handleModal, modalContent };\n};\n","import { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { modalContext } from 'hooks/modalContext';\nimport styles from './modal.module.scss';\nimport { CloseOutlined } from '@ant-design/icons';\n\nexport const Modal = () => {\n  const { modalContent, handleModal, modal } = useContext(modalContext);\n\n  const close = () => {\n    handleModal(null, { open: false });\n    modal.onClose();\n  };\n\n  if (modal.open) {\n    return ReactDOM.createPortal(\n      <>\n        <div className={styles.ModalOverlay} onClick={close} />\n\n        <div className={styles.modal}>\n          <div className={styles.header}>\n            <span className={styles.title}>{modal.title}</span>\n            <span className={styles.close} onClick={close}>\n              <CloseOutlined />\n            </span>\n          </div>\n          <div className={styles.body}>{modalContent}</div>\n        </div>\n      </>,\n      document.querySelector('#modal-root') ?? document.body,\n    );\n  } else return null;\n};\n","import { FC, createContext } from 'react';\nimport { ModalData, modalDataDefaults, useModal } from './useModal';\nimport { Modal } from '../components/modal';\n\ninterface ModalContext {\n  modal: ModalData;\n  handleModal: (content: JSX.Element | null, data: Partial<ModalData>) => void;\n  modalContent: JSX.Element | null;\n}\n\nconst modalContext = createContext<ModalContext>({\n  modal: modalDataDefaults,\n  handleModal: () => {},\n  modalContent: null,\n});\nconst { Provider } = modalContext;\n\nconst ModalProvider: FC = ({ children }) => {\n  let { modal, handleModal, modalContent } = useModal();\n  return (\n    <Provider value={{ modal, handleModal, modalContent }}>\n      <Modal />\n      {children}\n    </Provider>\n  );\n};\n\nexport { modalContext, ModalProvider };\n","import { ChangeEvent, FC, useEffect, useState } from 'react';\nimport styles from './mint-modal.module.scss';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport Input from 'antd/lib/input';\nimport { bannerHeight, bannerWidth } from '../../banner-templates/templateVars';\n\ninterface Props {\n  onCancel: () => void;\n}\n\nexport const MintModal: FC<Props> = ({ onCancel }) => {\n  const [name, setName] = useState<string>('');\n  const [url, setUrl] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [creating, setCreating] = useState<boolean>(true);\n  const mintDisabled = name === '' || url === '' || description === '';\n\n  useEffect(() => {\n    const svg = document.querySelector('svg[class*=\"banner-svg\"]');\n    if (svg !== null) {\n      const blob = new Blob([svg.outerHTML], {\n        type: 'image/svg+xml;charset=utf-8',\n      });\n      const blobURL = URL.createObjectURL(blob);\n\n      const image = new Image();\n\n      image.onload = () => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bannerWidth;\n        canvas.height = bannerHeight;\n        const context = canvas.getContext('2d');\n        context?.drawImage(image, 0, 0, bannerWidth, bannerHeight);\n        const jpg = canvas.toDataURL('image/jpg');\n        console.log(jpg);\n        setUrl(jpg);\n      };\n\n      image.src = blobURL;\n      console.log(image);\n    }\n  }, []);\n\n  useEffect(() => {\n    setCreating(url === '');\n  }, [url]);\n\n  const onChange =\n    (fn: (val: string) => void) =>\n    ({ target }: ChangeEvent<HTMLInputElement>) =>\n      fn(target.value);\n\n  if (creating) {\n    return (\n      <div className={styles.creating}>\n        <LoadingOutlined />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.MintModal}>\n      <div className={styles.preview}>\n        <img src={url} />\n      </div>\n\n      <div className={styles.form}>\n        <div className={styles.container}>\n          <div className={styles.label}>Name</div>\n          <Input\n            value={name}\n            onChange={onChange(setName)}\n            placeholder=\"Set NFT name\"\n          />\n        </div>\n        <div className={styles.container}>\n          <div className={styles.label}>Description</div>\n          <Input\n            value={description}\n            onChange={onChange(setDescription)}\n            placeholder=\"Set NFT description\"\n          />\n        </div>\n      </div>\n\n      <div className={styles.footer}>\n        <button className={styles.cancel} onClick={onCancel}>\n          Cancel\n        </button>\n        <button className={styles.mint} disabled={mintDisabled}>\n          Mint NFT\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { FC, useContext, useEffect } from 'react';\nimport styles from './banner-gen.module.scss';\nimport { Tile } from 'components/tile';\nimport tileStyles from 'components/tile/tile.module.scss';\nimport { BannerSVG } from 'components/banner-svg';\nimport { Controls } from 'components/controls';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTemplate, selectTemplateId } from 'state/app/selectors';\nimport { TemplateSelector } from 'components/template-selector';\nimport { modalContext } from 'hooks/modalContext';\nimport { TemplateKeys } from 'banner-templates';\nimport { deployControls, setTemplateId } from 'state/app/actions';\nimport { MintModal } from '../mint-modal';\n\nexport const BannerGen: FC = () => {\n  const dispatch = useDispatch();\n  const templateId = useSelector(selectTemplateId);\n  const template = useSelector(selectTemplate);\n  const { handleModal } = useContext(modalContext);\n  const mintDisabled = false;\n\n  useEffect(() => {\n    if (template !== undefined) {\n      dispatch(deployControls(template.objects));\n    }\n  }, [template]);\n\n  const onTemplateSelect = (t: TemplateKeys) => {\n    closeModal();\n    dispatch(setTemplateId(t));\n  };\n\n  const openTemplateModal = () => {\n    handleModal(<TemplateSelector onSelect={onTemplateSelect} />, {\n      open: true,\n      title: 'Choose a template',\n    });\n  };\n\n  const openMintModal = () => {\n    handleModal(<MintModal onCancel={closeModal} />, {\n      open: true,\n      title: 'Mint your creation!',\n    });\n  };\n\n  const closeModal = () => {\n    handleModal(null, { open: false });\n  };\n\n  return (\n    <Tile className={styles.BannerGen}>\n      <div className={styles.header}>\n        <div className={styles.left}>\n          <div className={tileStyles.title}>Twitter banner generator</div>\n          <div className={tileStyles.subTitle}>\n            Use the controls below to generate a unique twitter banner image.\n            When you're happy with the result, mint it as an NFT!\n          </div>\n        </div>\n        <button\n          className={styles.mint}\n          disabled={mintDisabled}\n          onClick={openMintModal}\n        >\n          Mint\n        </button>\n      </div>\n\n      <div className={styles.bannerGenerator}>\n        {templateId === null ? (\n          <div className={styles.noTemplate}>\n            <button onClick={openTemplateModal}>Select a template</button>\n          </div>\n        ) : (\n          <BannerSVG />\n        )}\n      </div>\n\n      <div className={styles.controls}>\n        <Controls />\n      </div>\n    </Tile>\n  );\n};\n","export const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: 'eth_requestAccounts',\n      });\n      const obj = {\n        status: '👆🏽 Write a message in the text-field above.',\n        address: addressArray[0],\n      };\n      return obj;\n    } catch (err: any) {\n      return {\n        address: '',\n        status: '😥 ' + err.message,\n      };\n    }\n  }\n};\n","import { FC, useEffect } from 'react';\nimport styles from './header.module.scss';\nimport { ethers, BigNumber, utils } from 'ethers';\nimport { connectWallet } from 'components/services/wallet';\n\nexport const Header: FC = () => {\n  return (\n    <div className={styles.Header}>\n      <button className={styles.connect} onClick={connectWallet}>\n        Connect Wallet\n      </button>\n    </div>\n  );\n};\n","import { BannerGen } from 'components/banner-gen';\nimport styles from './App.module.scss';\nimport { Header } from 'components/header';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <Header />\n\n      <div className={styles.body}>\n        <BannerGen />\n      </div>\n\n      <div className={styles.footer}>ETHOnline 2021 - suzamaki.eth</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer, PayloadAction } from '@reduxjs/toolkit';\nimport { TemplateKeys } from 'banner-templates';\nimport { TemplateControls } from 'models/controls';\nimport { objectControlId } from 'utils/helpers';\nimport { deployControls, setTemplateId, updateControlValue } from './actions';\n\ninterface AppState {\n  templateId: TemplateKeys | null;\n  controls: TemplateControls;\n  controlsState: { [index: string]: any };\n}\n\nconst initialState: AppState = {\n  templateId: null,\n  controls: [],\n  controlsState: {},\n};\n\nconst appReducer = createReducer(initialState, (app) => {\n  app.addCase(\n    setTemplateId,\n    (state: AppState, { payload }): AppState => ({\n      ...state,\n      templateId: payload,\n    }),\n  );\n\n  app.addCase(deployControls, (state: AppState, { payload }): AppState => {\n    const controlsState = payload.reduce((acc, cur) => {\n      const controlId = objectControlId(cur.id);\n      const controls = cur.controls.reduce(\n        (ac, cr) => ({\n          ...ac,\n          [controlId(cr.property)]: cr.default,\n        }),\n        {},\n      );\n\n      return {\n        ...acc,\n        ...controls,\n      };\n    }, {});\n    return {\n      ...state,\n      controlsState,\n    };\n  });\n\n  app.addCase(\n    updateControlValue,\n    (state: AppState, { payload }): AppState => ({\n      ...state,\n      controlsState: {\n        ...state.controlsState,\n        [payload.property]: payload.value,\n      },\n    }),\n  );\n});\n\nexport default appReducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport appReducer from './app';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './styles/index.scss';\nimport App from './App';\nimport { store } from './state/store';\nimport { Provider } from 'react-redux';\nimport { ModalProvider } from 'hooks/modalContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ModalProvider>\n        <App />\n      </ModalProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondaryBoxShadow\":\"banner-gen_secondaryBoxShadow__29FPV\",\"BannerGen\":\"banner-gen_BannerGen__Phb3X\",\"noTemplate\":\"banner-gen_noTemplate__3hgPo\",\"button\":\"banner-gen_button__20Dh5\",\"primaryButton\":\"banner-gen_primaryButton__2B1Vv\",\"mint\":\"banner-gen_mint__3yPl7\",\"secondaryButton\":\"banner-gen_secondaryButton__djz9S\",\"bannerGenerator\":\"banner-gen_bannerGenerator__1DTOq\",\"header\":\"banner-gen_header__3QotU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalOverlay\":\"modal_ModalOverlay__1KPeT\",\"ModalContainer\":\"modal_ModalContainer__1fpIk\",\"modal\":\"modal_modal__2bhYs\",\"header\":\"modal_header__2hP-3\",\"close\":\"modal_close__1xfsJ\",\"body\":\"modal_body__2bgsT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"controls_Controls__ElQeb\",\"title\":\"controls_title__NO-Ek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tile\":\"tile_Tile__1ccS4\",\"title\":\"tile_title__2jeIC\",\"subTitle\":\"tile_subTitle__3rhAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"control_Control__1fxVt\",\"label\":\"control_label__2mfyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"body\":\"App_body__2a4FT\",\"footer\":\"App_footer__3csul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"header_button__1dbnp\",\"primaryButton\":\"header_primaryButton__1i8Vy\",\"secondaryButton\":\"header_secondaryButton__12w3K\",\"Header\":\"header_Header__jF7Og\",\"connect\":\"header_connect__1s8oO\"};"],"sourceRoot":""}